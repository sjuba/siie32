package erp.mod.trn.form;

import erp.mod.SModConsts;
import erp.mod.trn.db.SDbInventoryValuation;
import java.util.Calendar;
import javax.swing.JOptionPane;
import sa.lib.SLibConsts;
import sa.lib.SLibTimeUtils;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Sergio Flores
 */
public class SFormInventoryValuation extends SBeanForm {
    
    private SDbInventoryValuation moRegistry;

    /**
     * Creates new form SFormInventoryValuation
     */
    public SFormInventoryValuation(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.TRN_INV_VAL, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moCalYear = new sa.lib.gui.bean.SBeanFieldCalendarYear();
        jPanel4 = new javax.swing.JPanel();
        jlPeriod = new javax.swing.JLabel();
        moCalPeriod = new sa.lib.gui.bean.SBeanFieldCalendarMonth();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros de la valuación:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setText("Año de cálculo:");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlYear);
        jPanel3.add(moCalYear);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPeriod.setText("Mes de cálculo:");
        jlPeriod.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlPeriod);
        jPanel4.add(moCalPeriod);

        jPanel2.add(jPanel4);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jlPeriod;
    private javax.swing.JLabel jlYear;
    private sa.lib.gui.bean.SBeanFieldCalendarMonth moCalPeriod;
    private sa.lib.gui.bean.SBeanFieldCalendarYear moCalYear;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        moCalYear.setCalendarSettings(SGuiUtils.getLabelName(jlYear));
        moCalPeriod.setCalendarSettings(SGuiUtils.getLabelName(jlPeriod));
        moFields.addField(moCalYear);
        moFields.addField(moCalPeriod);
        moFields.setFormButton(jbSave);
    }
    
    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbInventoryValuation) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.setFkYearYearId(miClient.getSession().getCurrentYear());
            moRegistry.setFkYearPeriodId(SLibTimeUtils.digestMonth(miClient.getSession().getCurrentDate())[1]);
            
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moCalYear.setValue(moRegistry.getFkYearYearId());
        moCalPeriod.setValue(moRegistry.getFkYearPeriodId());
        
        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) {
        }
        else {
        }
        
        addAllListeners();
    }

    @Override
    public SDbInventoryValuation getRegistry() throws Exception {
        SDbInventoryValuation registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            //registry.setPkInventoryValuationId(...);
        }

        registry.setFinished(false);
        //registry.setDeleted(...);
        registry.setFkYearYearId(moCalYear.getValue());
        registry.setFkYearPeriodId(moCalPeriod.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        return moFields.validateFields();
    }
    
    @Override
    public void actionSave() {
        String[] months = SLibTimeUtils.createMonthsOfYearStd(Calendar.LONG);
        
        if (miClient.showMsgBoxConfirm("Se realizará la valuación de inventarios para " + months[moCalPeriod.getValue() - 1] + " de " + moCalYear.getValue() + ".\n" + SGuiConsts.MSG_CNF_CONT) == JOptionPane.YES_OPTION) {
            super.actionSave();
        }
    }
}
