/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SPanelQueryIntegralBizPartner.java
 *
 */

package erp.gui;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.table.STabFilterYear;
import erp.lib.table.STableConstants;
import erp.lib.table.STableSetting;
import erp.lib.table.STableTabInterface;
import erp.mbps.data.SDataBizPartner;
import erp.mod.SModConsts;
import erp.mod.trn.view.SViewInvoice;
import erp.mod.trn.view.SViewInvoicePending;
import erp.mod.trn.view.SViewInvoiceToSend;
import erp.mod.trn.view.SViewOrderToProcess;
import erp.mod.trn.view.SViewOrders;
import erp.mod.trn.view.SViewSalesByStock;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.util.Calendar;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JToggleButton;
import javax.swing.event.ListSelectionEvent;
import sa.lib.SLibConsts;
import sa.lib.SLibTimeUtils;
import sa.lib.SLibUtils;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiItem;
import sa.lib.gui.SGuiParams;

/**
 *
 * @author Claudio Peña
 */
public class SPanelQueryIntegralBizPartner extends javax.swing.JPanel implements STableTabInterface, javax.swing.event.ListSelectionListener, java.awt.event.ActionListener, java.awt.event.ItemListener {
   
    private static final int VIEW_1 = 1;    // View Orders
    private static final int VIEW_2 = 2;    // View Order To Process
    private static final int VIEW_3 = 3;    // View Invoice
    private static final int VIEW_4 = 4;    // View Sales By Stock
    private static final int VIEW_5 = 5;    // View Invoice To Authorize
    private static final int VIEW_6 = 6;    // View Invoice To Send
    
    private int mnViewType;
    private int mnBizPartnerCategory;
    private erp.client.SClientInterface miClient;
    
    private java.util.Vector<erp.lib.table.STableSetting> mvTableSettings;
    private erp.lib.table.STabFilterYear moFilterYear;

    private SDataBizPartner moBizPartner;
    private erp.mbps.data.SDataBizPartnerCategory moBizPartnerCategory;
    
    private SViewOrders moOrders;
    private SViewOrderToProcess moOrderforprocessing;
    private SViewInvoice moInvoice;
    private SViewSalesByStock moSalesByStock;
    private SViewInvoicePending moInvoiceToAuthorize;
    private SViewInvoiceToSend moInvoiceToSend;
    
    private int mnYear;
    private java.util.Date mtDateStart;
    private java.util.Date mtDateEnd;
    private javax.swing.JToggleButton[] majtbMonths;
     
    /** Creates new form SPanelQueryIntegralBizPartner
     * @param client 
     * @param viewType 
     * @param bizPartnerCategory
     */
    public SPanelQueryIntegralBizPartner(erp.client.SClientInterface client, final int viewType, final int bizPartnerCategory) {
        miClient = client;
        mnViewType = viewType;
        mnBizPartnerCategory = bizPartnerCategory;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbgPeriods = new javax.swing.ButtonGroup();
        jpFilter = new javax.swing.JPanel();
        jlBizPartner = new javax.swing.JLabel();
        jcbBizPartner = new javax.swing.JComboBox();
        jtbPeriod01 = new javax.swing.JToggleButton();
        jtbPeriod02 = new javax.swing.JToggleButton();
        jtbPeriod03 = new javax.swing.JToggleButton();
        jtbPeriod04 = new javax.swing.JToggleButton();
        jtbPeriod05 = new javax.swing.JToggleButton();
        jtbPeriod06 = new javax.swing.JToggleButton();
        jtbPeriod07 = new javax.swing.JToggleButton();
        jtbPeriod08 = new javax.swing.JToggleButton();
        jtbPeriod09 = new javax.swing.JToggleButton();
        jtbPeriod10 = new javax.swing.JToggleButton();
        jtbPeriod11 = new javax.swing.JToggleButton();
        jtbPeriod12 = new javax.swing.JToggleButton();
        jtbPeriodAll = new javax.swing.JToggleButton();
        jtfYearPeriod = new javax.swing.JTextField();
        jpData = new javax.swing.JPanel();
        jpDataBizPartner = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jlBizPartnerrName = new javax.swing.JLabel();
        jtfrName = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jlBizPartnerAddress = new javax.swing.JLabel();
        jtfAddress = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jlBizPartnerLocality = new javax.swing.JLabel();
        jtfLocality = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jlBizPartnerCP = new javax.swing.JLabel();
        jtfCP = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jlBizPartnerCountry = new javax.swing.JLabel();
        jtfCountry = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        jlBizPartnerLimCre = new javax.swing.JLabel();
        jtfLimCre = new javax.swing.JTextField();
        jtfMoney = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        jlBizPartnerDayCre = new javax.swing.JLabel();
        jtfDayCre = new javax.swing.JTextField();
        jPanel45 = new javax.swing.JPanel();
        jlBizPartnerDayGra = new javax.swing.JLabel();
        jtfDayGra = new javax.swing.JTextField();
        jPanel46 = new javax.swing.JPanel();
        jlBizPartnerDateStartOpe = new javax.swing.JLabel();
        jtfDateStartOpe = new javax.swing.JFormattedTextField();
        jPanel47 = new javax.swing.JPanel();
        jlBizPartnerCreditType = new javax.swing.JLabel();
        jtfCreditType = new javax.swing.JTextField();
        jtpDataViews = new javax.swing.JTabbedPane();
        jpOrder = new javax.swing.JPanel();
        jpOrderForProce = new javax.swing.JPanel();
        jpInvoice = new javax.swing.JPanel();
        jpSalesByStock = new javax.swing.JPanel();
        jpInvoiceToAuthorize = new javax.swing.JPanel();
        jpInvoiceToSend = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout(0, 5));

        jpFilter.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartner.setText("Asociado negocios:");
        jlBizPartner.setPreferredSize(new java.awt.Dimension(100, 23));
        jpFilter.add(jlBizPartner);

        jcbBizPartner.setPreferredSize(new java.awt.Dimension(250, 23));
        jpFilter.add(jcbBizPartner);

        jbgPeriods.add(jtbPeriod01);
        jtbPeriod01.setText("01");
        jtbPeriod01.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod01.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod01);

        jbgPeriods.add(jtbPeriod02);
        jtbPeriod02.setText("02");
        jtbPeriod02.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod02.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod02);

        jbgPeriods.add(jtbPeriod03);
        jtbPeriod03.setText("03");
        jtbPeriod03.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod03.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod03);

        jbgPeriods.add(jtbPeriod04);
        jtbPeriod04.setText("04");
        jtbPeriod04.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod04.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod04);

        jbgPeriods.add(jtbPeriod05);
        jtbPeriod05.setText("05");
        jtbPeriod05.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod05.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod05);

        jbgPeriods.add(jtbPeriod06);
        jtbPeriod06.setText("06");
        jtbPeriod06.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod06.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod06);

        jbgPeriods.add(jtbPeriod07);
        jtbPeriod07.setText("07");
        jtbPeriod07.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod07.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod07);

        jbgPeriods.add(jtbPeriod08);
        jtbPeriod08.setText("08");
        jtbPeriod08.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod08.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod08);

        jbgPeriods.add(jtbPeriod09);
        jtbPeriod09.setText("09");
        jtbPeriod09.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod09.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod09);

        jbgPeriods.add(jtbPeriod10);
        jtbPeriod10.setText("10");
        jtbPeriod10.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod10.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod10);

        jbgPeriods.add(jtbPeriod11);
        jtbPeriod11.setText("11");
        jtbPeriod11.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod11.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod11);

        jbgPeriods.add(jtbPeriod12);
        jtbPeriod12.setText("12");
        jtbPeriod12.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriod12.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriod12);

        jbgPeriods.add(jtbPeriodAll);
        jtbPeriodAll.setText("Año");
        jtbPeriodAll.setToolTipText("Ver todo el año");
        jtbPeriodAll.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jtbPeriodAll.setPreferredSize(new java.awt.Dimension(40, 23));
        jpFilter.add(jtbPeriodAll);

        jtfYearPeriod.setEditable(false);
        jtfYearPeriod.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtfYearPeriod.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfYearPeriod.setText("2001-01");
        jtfYearPeriod.setToolTipText("Período actual");
        jtfYearPeriod.setFocusable(false);
        jtfYearPeriod.setPreferredSize(new java.awt.Dimension(60, 23));
        jpFilter.add(jtfYearPeriod);

        add(jpFilter, java.awt.BorderLayout.NORTH);

        jpData.setLayout(new java.awt.BorderLayout());

        jpDataBizPartner.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos generales:"));
        jPanel2.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerrName.setText("Nombre:");
        jlBizPartnerrName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlBizPartnerrName);

        jtfrName.setEditable(false);
        jtfrName.setFocusable(false);
        jtfrName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel8.add(jtfrName);

        jPanel2.add(jPanel8);

        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerAddress.setText("Dirección:");
        jlBizPartnerAddress.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel23.add(jlBizPartnerAddress);

        jtfAddress.setEditable(false);
        jtfAddress.setFocusable(false);
        jtfAddress.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel23.add(jtfAddress);

        jPanel2.add(jPanel23);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerLocality.setText("Localidad:");
        jlBizPartnerLocality.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel24.add(jlBizPartnerLocality);

        jtfLocality.setEditable(false);
        jtfLocality.setFocusable(false);
        jtfLocality.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel24.add(jtfLocality);

        jPanel2.add(jPanel24);

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerCP.setText("CP:");
        jlBizPartnerCP.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel27.add(jlBizPartnerCP);

        jtfCP.setEditable(false);
        jtfCP.setFocusable(false);
        jtfCP.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel27.add(jtfCP);

        jPanel2.add(jPanel27);

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerCountry.setText("País:");
        jlBizPartnerCountry.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel26.add(jlBizPartnerCountry);

        jtfCountry.setEditable(false);
        jtfCountry.setFocusable(false);
        jtfCountry.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel26.add(jtfCountry);

        jPanel2.add(jPanel26);

        jpDataBizPartner.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Saldo del asociado de negocios:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel42.setOpaque(false);
        jPanel42.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel43.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerLimCre.setText("Límite crédito:");
        jlBizPartnerLimCre.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel43.add(jlBizPartnerLimCre);

        jtfLimCre.setEditable(false);
        jtfLimCre.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfLimCre.setText("0.00");
        jtfLimCre.setFocusable(false);
        jtfLimCre.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel43.add(jtfLimCre);

        jtfMoney.setEditable(false);
        jtfMoney.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfMoney.setText("MXN");
        jtfMoney.setFocusable(false);
        jtfMoney.setPreferredSize(new java.awt.Dimension(35, 23));
        jPanel43.add(jtfMoney);

        jPanel42.add(jPanel43);

        jPanel44.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerDayCre.setText("Días crédito:");
        jlBizPartnerDayCre.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel44.add(jlBizPartnerDayCre);

        jtfDayCre.setEditable(false);
        jtfDayCre.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfDayCre.setText("0");
        jtfDayCre.setFocusable(false);
        jtfDayCre.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel44.add(jtfDayCre);

        jPanel42.add(jPanel44);

        jPanel45.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerDayGra.setText("Días gracia:");
        jlBizPartnerDayGra.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel45.add(jlBizPartnerDayGra);

        jtfDayGra.setEditable(false);
        jtfDayGra.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfDayGra.setText("0");
        jtfDayGra.setFocusable(false);
        jtfDayGra.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel45.add(jtfDayGra);

        jPanel42.add(jPanel45);

        jPanel46.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerDateStartOpe.setText("Inicio operación:");
        jlBizPartnerDateStartOpe.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel46.add(jlBizPartnerDateStartOpe);

        jtfDateStartOpe.setEditable(false);
        jtfDateStartOpe.setText("yyyy/mm/dd");
        jtfDateStartOpe.setFocusable(false);
        jtfDateStartOpe.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel46.add(jtfDateStartOpe);

        jPanel42.add(jPanel46);

        jPanel47.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerCreditType.setText("Tipo Límite Crédito:");
        jlBizPartnerCreditType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel47.add(jlBizPartnerCreditType);

        jtfCreditType.setEditable(false);
        jtfCreditType.setText("X");
        jtfCreditType.setToolTipText("");
        jtfCreditType.setFocusable(false);
        jtfCreditType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel47.add(jtfCreditType);

        jPanel42.add(jPanel47);

        jPanel1.add(jPanel42, java.awt.BorderLayout.NORTH);

        jpDataBizPartner.add(jPanel1, java.awt.BorderLayout.CENTER);

        jpData.add(jpDataBizPartner, java.awt.BorderLayout.WEST);
        jpDataBizPartner.getAccessibleContext().setAccessibleName("Datos del Cliente");

        jpOrder.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpOrder.setLayout(new java.awt.BorderLayout());
        jtpDataViews.addTab("Pedidos", jpOrder);

        jpOrderForProce.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpOrderForProce.setLayout(new java.awt.BorderLayout());
        jtpDataViews.addTab("Pedidos x procesar", jpOrderForProce);

        jpInvoice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpInvoice.setLayout(new java.awt.BorderLayout());
        jtpDataViews.addTab("Facturas", jpInvoice);

        jpSalesByStock.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpSalesByStock.setLayout(new java.awt.BorderLayout());
        jtpDataViews.addTab("Facturas x surtir", jpSalesByStock);

        jpInvoiceToAuthorize.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpInvoiceToAuthorize.setLayout(new java.awt.BorderLayout());
        jtpDataViews.addTab("Facturas x autorizar", jpInvoiceToAuthorize);

        jpInvoiceToSend.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpInvoiceToSend.setLayout(new java.awt.BorderLayout());
        jtpDataViews.addTab("Facturas x enviar", jpInvoiceToSend);

        jpData.add(jtpDataViews, java.awt.BorderLayout.CENTER);

        add(jpData, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel8;
    private javax.swing.ButtonGroup jbgPeriods;
    private javax.swing.JComboBox jcbBizPartner;
    private javax.swing.JLabel jlBizPartner;
    private javax.swing.JLabel jlBizPartnerAddress;
    private javax.swing.JLabel jlBizPartnerCP;
    private javax.swing.JLabel jlBizPartnerCountry;
    private javax.swing.JLabel jlBizPartnerCreditType;
    private javax.swing.JLabel jlBizPartnerDateStartOpe;
    private javax.swing.JLabel jlBizPartnerDayCre;
    private javax.swing.JLabel jlBizPartnerDayGra;
    private javax.swing.JLabel jlBizPartnerLimCre;
    private javax.swing.JLabel jlBizPartnerLocality;
    private javax.swing.JLabel jlBizPartnerrName;
    private javax.swing.JPanel jpData;
    private javax.swing.JPanel jpDataBizPartner;
    private javax.swing.JPanel jpFilter;
    private javax.swing.JPanel jpInvoice;
    private javax.swing.JPanel jpInvoiceToAuthorize;
    private javax.swing.JPanel jpInvoiceToSend;
    private javax.swing.JPanel jpOrder;
    private javax.swing.JPanel jpOrderForProce;
    private javax.swing.JPanel jpSalesByStock;
    private javax.swing.JToggleButton jtbPeriod01;
    private javax.swing.JToggleButton jtbPeriod02;
    private javax.swing.JToggleButton jtbPeriod03;
    private javax.swing.JToggleButton jtbPeriod04;
    private javax.swing.JToggleButton jtbPeriod05;
    private javax.swing.JToggleButton jtbPeriod06;
    private javax.swing.JToggleButton jtbPeriod07;
    private javax.swing.JToggleButton jtbPeriod08;
    private javax.swing.JToggleButton jtbPeriod09;
    private javax.swing.JToggleButton jtbPeriod10;
    private javax.swing.JToggleButton jtbPeriod11;
    private javax.swing.JToggleButton jtbPeriod12;
    private javax.swing.JToggleButton jtbPeriodAll;
    private javax.swing.JTextField jtfAddress;
    private javax.swing.JTextField jtfCP;
    private javax.swing.JTextField jtfCountry;
    private javax.swing.JTextField jtfCreditType;
    private javax.swing.JFormattedTextField jtfDateStartOpe;
    private javax.swing.JTextField jtfDayCre;
    private javax.swing.JTextField jtfDayGra;
    private javax.swing.JTextField jtfLimCre;
    private javax.swing.JTextField jtfLocality;
    private javax.swing.JTextField jtfMoney;
    private javax.swing.JTextField jtfYearPeriod;
    private javax.swing.JTextField jtfrName;
    private javax.swing.JTabbedPane jtpDataViews;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsExtra() {
        int month = SLibTimeUtils.digestMonth(miClient.getSessionXXX().getWorkingDate())[1];
        String[] months = SLibTimeUtils.createMonthsOfYear(Locale.getDefault(), Calendar.LONG);
        SGuiParams params = new SGuiParams(mnBizPartnerCategory);

        mvTableSettings = new Vector<STableSetting>();
        moFilterYear = new STabFilterYear(miClient, this);
        jcbBizPartner.removeItemListener(this);
        miClient.getSession().populateCatalogue(jcbBizPartner, SModConsts.BPSU_BP, mnBizPartnerCategory, null);
        jcbBizPartner.addItemListener(this);
        
        moOrders = new SViewOrders((SGuiClient) miClient, mnViewType, VIEW_1 , "Pedidos", params);
        jpOrder.add(moOrders);
        
        moOrderforprocessing = new SViewOrderToProcess((SGuiClient) miClient, mnViewType, VIEW_2 , "Pedidos x procesar", params);
        jpOrderForProce.add(moOrderforprocessing);
        
        moInvoice = new SViewInvoice((SGuiClient) miClient, mnViewType, VIEW_3 , "Facturas", params);
        jpInvoice.add(moInvoice);
        
        moSalesByStock = new SViewSalesByStock((SGuiClient) miClient, mnViewType, VIEW_4 , "Facturas", params);
        jpSalesByStock.add(moSalesByStock);
        
        moInvoiceToAuthorize = new SViewInvoicePending((SGuiClient) miClient, mnViewType, VIEW_5 , "Facturas", params);
        jpInvoiceToAuthorize.add(moInvoiceToAuthorize);
  
        moInvoiceToSend = new SViewInvoiceToSend((SGuiClient) miClient, mnViewType, VIEW_6 , "Facturas", params);
        jpInvoiceToSend.add(moInvoiceToSend);
        
        jpFilter.add(moFilterYear, 2);
        mnYear = miClient.getSessionXXX().getWorkingYear();
        setMonth(month);
        
        resetBizPartner();
        resetBizPartnerCategory();
                
        majtbMonths = new JToggleButton[12];
        majtbMonths[0] = jtbPeriod01;
        majtbMonths[1] = jtbPeriod02;
        majtbMonths[2] = jtbPeriod03;
        majtbMonths[3] = jtbPeriod04;
        majtbMonths[4] = jtbPeriod05;
        majtbMonths[5] = jtbPeriod06;
        majtbMonths[6] = jtbPeriod07;
        majtbMonths[7] = jtbPeriod08;
        majtbMonths[8] = jtbPeriod09;
        majtbMonths[9] = jtbPeriod10;
        majtbMonths[10] = jtbPeriod11;
        majtbMonths[11] = jtbPeriod12;

        for (int i = 0; i < majtbMonths.length; i++) {
            majtbMonths[i].setToolTipText("Ver " + months[i]);
            majtbMonths[i].addActionListener(this);
        }
        
        jtbPeriodAll.addActionListener(this);
        jbgPeriods.setSelected(majtbMonths[month - 1].getModel(), true);
    }
     
    private void initViewData(final int idBizPartner) {
        moOrders.initView(mtDateStart, mtDateEnd, mnYear, idBizPartner);
        moOrderforprocessing.initView(mtDateStart, mtDateEnd, mnYear, idBizPartner);
        moInvoice.initView(mtDateStart, mtDateEnd, mnYear, idBizPartner);
        moInvoiceToAuthorize.initView(mtDateStart, mtDateEnd, mnYear, idBizPartner);
        moInvoiceToSend.initView(mtDateStart, mtDateEnd, mnYear, idBizPartner);
        moSalesByStock.initView(mtDateStart, mtDateEnd, mnYear, idBizPartner);
    }
    
    private void setYear(final int year) {
        int month = 0;
        mnYear = year;
        
        if (jtbPeriodAll.isSelected()) {
            setAllPeriods();
        }
        else {
            for (int i = 0; i < majtbMonths.length; i++) {
                if (majtbMonths[i].isSelected()) {
                    month = i + 1;
                    break;
                }
            }
            setMonth(month);
        }
    }
    
    private void setMonth(int month) {
        mtDateStart = SLibTimeUtils.getBeginOfMonth(SLibTimeUtils.createDate(mnYear, month));
        mtDateEnd = SLibTimeUtils.getEndOfMonth(SLibTimeUtils.createDate(mnYear, month));
        jtfYearPeriod.setText(SLibUtils.DecimalFormatCalendarYear.format(mnYear) + "-" + SLibUtils.DecimalFormatCalendarMonth.format(month));
    }
    
    private void setAllPeriods() {
        mtDateStart = SLibTimeUtils.getBeginOfMonth(SLibTimeUtils.createDate(mnYear, 1));
        mtDateEnd = SLibTimeUtils.getEndOfMonth(SLibTimeUtils.createDate(mnYear, 12));
        jtfYearPeriod.setText(SLibUtils.DecimalFormatCalendarYear.format(mnYear));
    }
    
    private void setperiod(JToggleButton toggleButton) {
        for (int i = 0; i < majtbMonths.length; i++) {
            if (toggleButton == majtbMonths[i]) {
                setMonth(i + 1);
                initViewData(moBizPartner.getPkBizPartnerId()); 
                break;
            }
        }
    }
    
    public void resetBizPartner() {
        jtfrName.setText("");
        jtfAddress.setText("");
        jtfLocality.setText("");
        jtfCP.setText("");
        jtfCountry.setText("");
        moBizPartner = null;
    }
    
    public void resetBizPartnerCategory() {
        jtfLimCre.setText(0.0 + "");
        jtfMoney.setText("MXN");
        jtfDayCre.setText(0 + "");
        jtfDayGra.setText(0 + "");
        jtfDateStartOpe.setText("");
        jtfCreditType.setText("");
    }
    
    private void renderCustomer() {
        try {
            int[] pk = (int[]) (((SGuiItem) jcbBizPartner.getSelectedItem()).getPrimaryKey());
            moBizPartner = (SDataBizPartner) SDataUtilities.readRegistry(miClient, SDataConstants.BPSU_BP, pk, SLibConstants.EXEC_MODE_SILENT);
            
            if (moBizPartner != null) {
                moBizPartnerCategory = mnBizPartnerCategory == SDataConstantsSys.BPSS_CT_BP_CUS ? moBizPartner.getDbmsCategorySettingsCus() : moBizPartner.getDbmsCategorySettingsSup();

                jtfrName.setText(moBizPartner.getBizPartner());
                jtfAddress.setText(moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getStreet()           
                        + " " + moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getStreetNumberExt()
                        + " " + moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getStreetNumberInt());
                jtfLocality.setText(moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getLocality());
                jtfCP.setText(moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getZipCode());
                jtfCountry.setText(moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getDbmsDataCountry().getCountry());

                if (moBizPartnerCategory != null) {
                    jtfLimCre.setText(SLibUtils.DecimalFormatValue2D.format(moBizPartnerCategory.getCreditLimit()) + "");
                    jtfMoney.setText(miClient.getSession().getSessionCustom().getLocalCurrencyCode());
                    jtfDayCre.setText(SLibUtils.DecimalFormatValue0D.format(moBizPartnerCategory.getDaysOfCredit()) + "");
                    jtfDayGra.setText(SLibUtils.DecimalFormatValue0D.format(moBizPartnerCategory.getDaysOfGrace()) + "");
                    jtfDateStartOpe.setText(SLibUtils.DateFormatDate.format(moBizPartnerCategory.getDateStart()));
                    jtfCreditType.setText(moBizPartnerCategory.getDbmsCreditType() == null ? "" : moBizPartnerCategory.getDbmsCreditType());
                }
                else {
                    resetBizPartnerCategory();
                } 
                initViewData(moBizPartner.getPkBizPartnerId());
            }
            else {
                resetBizPartner();
                resetBizPartnerCategory();
            }
        }
        catch (Exception e) {
            SLibUtils.showException(this, e);
        }
    }
    
    @Override
    public int getTabType() {
        return mnViewType;
    }
    
    @Override
    public int getTabTypeAux01() {
        return SLibConsts.UNDEFINED;
    }

    @Override
    public int getTabTypeAux02() {
        return SLibConsts.UNDEFINED;
    }
    
    @Override
    public void addSetting(STableSetting setting) {
        boolean add = true;
        erp.lib.table.STableSetting settingAux;

        for (int i = 0; i < mvTableSettings.size(); i++) {
            settingAux = (erp.lib.table.STableSetting) mvTableSettings.get(i);
            if (settingAux.getType() == setting.getType()) {
                add = false;
                mvTableSettings.set(i, setting);
                break;
            }
        }

        if (add) {
            mvTableSettings.add(setting);
        }
    }

    @Override
    public void updateSetting(STableSetting setting) {
        addSetting(setting);

        if (setting.getType() == STableConstants.SETTING_FILTER_YEAR) {
            try {
                setYear((Integer) setting.getSetting());
                initViewData(moBizPartner.getPkBizPartnerId());
            }
            catch (Exception ex) {
                SLibUtils.printException(this, ex);
            }
        }
    }

    @Override
    public void actionRefresh(int mode) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JToggleButton) {
            JToggleButton toggleButton = (JToggleButton) e.getSource();
            
            if (toggleButton == jtbPeriodAll) {
                setAllPeriods();
                initViewData(moBizPartner.getPkBizPartnerId());
            }
            else {
                setperiod(toggleButton);
            }
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof JComboBox) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                JComboBox comboBox = (JComboBox) e.getSource();
                if (comboBox == jcbBizPartner) {
                    actionChangeCustomer();
                }
            }
        }
    }

    private void actionChangeCustomer() {
        renderCustomer();
    }

    @Override
    public Vector<Integer> getSuscriptors() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Vector<STableSetting> getTableSettings() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
